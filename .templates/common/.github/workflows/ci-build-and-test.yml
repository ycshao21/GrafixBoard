name: "[CI] Build and Test"
on:
  pull_request:
    branches: [ "main" ]

jobs:

  build_and_test:
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: true
      matrix:
        os: [ubuntu-latest, windows-latest]
        build_type: [Release]
        c_compiler: [gcc, clang, cl]
        include:
          - os: windows-latest
            c_compiler: cl
            cpp_compiler: cl
          - os: ubuntu-latest
            c_compiler: gcc
            cpp_compiler: g++
          - os: ubuntu-latest
            c_compiler: clang
            cpp_compiler: clang++
        exclude:
          - os: windows-latest
            c_compiler: gcc
          - os: windows-latest
            c_compiler: clang
          - os: ubuntu-latest
            c_compiler: cl

    steps:
      - name: Checkout PR source branch
        uses: actions/checkout@v4
        with:
          ref: ${{ github.head_ref }}
          fetch-depth: 0
      
      - name: "[Linux] Install Ninja"
        if: runner.os == 'Linux'
        run: sudo apt-get install ninja-build

      - name: "[Linux|Clang] Install libomp-dev"
        if: runner.os == 'Linux' && matrix.c_compiler == 'clang'
        run: sudo apt-get install libomp-dev

      - name: "[Windows] Install Ninja"
        if: runner.os == 'Windows'
        run: choco install ninja

      - name: Set reusable strings
        id: strings
        shell: bash
        run: |
          echo "CC=${{ matrix.c_compiler }}" >> "$GITHUB_ENV"
          echo "CXX=${{ matrix.cpp_compiler }}" >> "$GITHUB_ENV"

      - name: "[Linux] Configure CMake and Build"
        if: runner.os == 'Linux'
        shell: bash
        run: >
          bash scripts/build.sh

      - name: "[Windows] Configure CMake and Build"
        if: runner.os == 'Windows'
        shell: powershell
        run: >
          .\scripts\msvc-bash.bat .\scripts\build.sh --prune-env-path